<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>Websystems</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>Websystems Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <springCoreVersion>3.2.4.RELEASE</springCoreVersion>
    <hibernateVersion>4.1.9.Final</hibernateVersion>
  </properties>

  <dependencies>
  	<!-- necessary mvc dependencies -->
  	<!-- spring context provides spring core -->
  	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springCoreVersion}</version>
			<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
			</exclusions> 
		</dependency>
		<!-- Additional classes or something :\ -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${springCoreVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${springCoreVersion}</version>
		</dependency>
		<!--spring aop add aop modules  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${springCoreVersion}</version>
		</dependency>
		<!-- webmvc contains MVC modules and REST services implementation for web -->
  		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springCoreVersion}</version>
		</dependency>
		<!-- The spring web module provides basic web oriented integration features such as multipart file upload
			and initialization of IoC container using servlet listener and web-oriented application context
		 -->
  		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springCoreVersion}</version>
		</dependency>
  		<!-- end of main mvc dependencies -->
  		<!-- Spring TX -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${springCoreVersion}</version>
        </dependency>
  		
  		<!-- Spring database necessary dependencies -->
  		
  		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.11.9.RELEASE</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-jdbc</artifactId>
    		<version>${springCoreVersion}</version>
		</dependency>
		
		
		<!-- Used for Hibernate4 LocalSessionFactoryBean -->	
  		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${springCoreVersion}</version>
		</dependency>
  		
  		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.14</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
			<scope>compile</scope>
		</dependency>
		
		<!--  we are using a proper connection pool instead of the dev-only
		 Spring implementation â€“ the DriverManagerDataSource.  -->
		<!-- <dependency>
    		<groupId>org.apache.tomcat</groupId>
    		<artifactId>tomcat-dbcp</artifactId>
    		<version>7.0.100</version>
		</dependency> -->
		<dependency>
    		<groupId>c3p0</groupId>
    		<artifactId>c3p0</artifactId>
    		<version>0.9.1.2</version>
    	</dependency>
		
		<!-- bytecode for hibernate -->
		<dependency>
   			<groupId>org.javassist</groupId>
   			<artifactId>javassist</artifactId>
   			<version>3.18.2-GA</version>
		</dependency>
  		
  		
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernateVersion}</version>
		</dependency>
		<!-- Hibernate validation -->
		<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.3.5.Final</version>
        </dependency>
        <!-- Hibernate Validator also requires an implementation of the Unified Expression Language
         for evaluating dynamic expressions in constraint violation messages.-->
		<dependency>
   			<groupId>org.glassfish</groupId>
   			<artifactId>javax.el</artifactId>
   			<version>3.0.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.el/javax.el-api -->
		<!-- <dependency>
    		<groupId>javax.el</groupId>
    		<artifactId>javax.el-api</artifactId>
    		<version>2.2.5</version>
		</dependency> -->
		
		<!-- hz what is this -->
		<dependency>
   			<groupId>org.hibernate</groupId>
   			<artifactId>hibernate-validator-cdi</artifactId>
  			<version>5.3.3.Final</version>
		</dependency>
		<!-- end of db dependency -->
		
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>compile</scope>
		</dependency>
  		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>	
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- logging -->
		<dependency>
    		<groupId>org.slf4j</groupId>
    		<artifactId>jcl-over-slf4j</artifactId>
    		<version>1.7.21</version>
		</dependency>
		<dependency>
   	 		<groupId>ch.qos.logback</groupId>
    		<artifactId>logback-classic</artifactId>
    		<version>1.1.7</version>
    		<scope>test</scope>
		</dependency>	
		<dependency>
      		<groupId>junit</groupId>
      		<artifactId>junit</artifactId>
      		<version>4.11</version>
      		<scope>test</scope>
    	</dependency>
  </dependencies>

  <build>
    <!-- <finalName>Websystems</finalName> -->
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
